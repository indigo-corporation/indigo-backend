version: "3.7"
services:
    app:
        build:
            args:
                user: indigo
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: indigo
        ports:
            - "6001:6001"
        container_name: indigo-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ../:/var/www
        networks:
            - indigo
        depends_on:
            - db
            - redis
            - rabbitmq

    db:
        image: postgres:15.2
        container_name: indigo-db
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            SERVICE_TAGS: dev
            SERVICE_NAME: postgres
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - ./postgres:/docker-entrypoint-initdb.d
        networks:
            - indigo

    nginx:
        image: nginx:alpine
        container_name: indigo-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ../:/var/www
            - ./nginx:/etc/nginx/conf.d/
        networks:
            - indigo

    redis:
        image: redis
        container_name: indigo-redis
        ports:
            - "6379:6379"
        networks:
            - indigo

    rabbitmq:
        image: rabbitmq:3-management
        container_name: indigo-rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        environment:
            RABBITMQ_DEFAULT_USER: rabbituser
            RABBITMQ_DEFAULT_PASS: PXkaU2Ekj6vbUQHS
        networks:
            - indigo

networks:
    indigo:
        driver: bridge
